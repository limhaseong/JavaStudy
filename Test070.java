/*=================================
■■■ 클래스와 인스턴스 ■■■
- 직사각형 클래스 설계 실습
=================================*/

/*
직사각형의 넓이와 둘레를 계산하는 객체 -> 클래스로 표현

클래스의 정체성 -> 직사각형의 설계도
클래스의 속성 -> 가로, 세로, (넓이, 둘레, 부피, 무게, 재질, 색상, 질량...) ->() 생략가능
클래스의 기능 -> 넓이 계산, 둘레 계산, 가로와 세로 입력 기능, 결과출력하는 기능

객체를 구성 한다는 것은
클래스를 설계 한다는 것과 같고

객체를 구성하는 속성(상태, 데이터) + 기능(동장, 행위)
     ||               ||                    ||
클래스 설계          변수                 메소드

class 직사각형
{
	//속성(상태, 데이터) -> 변수(순서 의미 없음)
	 - 가로, 세로(뭘 먼저 쓰든 상관 없음)
	
	//기능(동장, 행위) -> 메소드(순서 의미 없음)
	 - 넓이 계산, 둘레 계산, 가로와 세로 입력, 결과출력(뭘 먼저 쓰든 상관 없음)
	가로 세로 입력()
	{

	}
	넓이 계산()
	{

	}
	둘레 계산()
	{

	}
	결과출력()
	{

	}

}
*/

import java.util.Scanner;

class Rect                //직사각형 클래스 설계
{
	//속성(상태, 데이터) -> 변수(순서 의미 없음)
	int w,h;              // 가로, 세로

	//기능(동장, 행위) -> 메소드(순서 의미 없음)
	void input()               // 가로, 세로 입력 받는 행위
	{
		Scanner sc = new Scanner(System.in);

		System.out.print("가로 입력 : ");
		w = sc.nextInt();

		System.out.print("세로 입력 : ");
		h = sc.nextInt();
	}
	int calLength()          // 둘레 계산 -> (가로 + 세로) * 2
					     // 매개변수 필요없이 w, h 사용하면됨.
	{
		return (w + h) *2;      // 둘레 담아둘 변수 선언이 없음. return 뒤에 어떤 타입이 올지 보면됨.
		   // ||			        // 반환한 곳에 놓고 오게끔 하면됨.
		/*
		int result;
		result = (w + h) *2;          
		return result;
		*/
	}
	int calArea()                  // 넓이 계산 -> 가로 * 세로
	{
		// 주요 변수 선언
		int result;
		
		// 연산 및 처리 -> 선언한 변수들에 값 담아내기
		result = w*h;
		
		// 최종 결과 반환
		return result;

		// return w*h; 이렇게만 해도 됨.
	}

	void print(int a, int b)                         // 결과출력 -> 가로: xx, 세로: xx, 넓이: xx, 둘레: xx
	{
		//매개변수는 int a,b가 아닌 int a, int b로 써줘야됨
		//출력만 하는 메소드는 void

		//가로 : xx
		//세로 : xx      위에 int w,h가 있으므로 매개변수 안해도 됨
		//넓이 : xx      넓이와 둘레는 매개변수로 넘겨줘야됨.
		//둘레 : xx

		System.out.println("가로 입력 : " + w);
		System.out.println("세로 입력 : " + h);
		System.out.println("넓이 입력 : " + a);
		System.out.println("둘레 입력 : " + b);
	}

}

// 한 자바 파일에 여러 class 가능하다.
// 단, public class는 한개만 가능하다.
// 이때 파일명은 public class 이름으로 한다.
// -> 컴파일 실행을 하면 Rect.class 와 Test070.class파일이 같이 만들어진다.

/*
하나의 자바 파일(.java)에 여러 개의 클래스(class)를 설계할 수 있다.
하지만 public class는 이 파일 내에서 하나만 둘 수 있다.
파일을 저장할 때의 이름은
이 public class의 이름으로 저장해야 한다.
일반적으로는(실무적으로는) 하나의 파일에 하나의 클래스를 설계한다.
또한 여러 개의 클래스가 설계된 하나의 파일을 런파일하게 되면
내부에 설계된 클래스의 수 만큼 클래스 파일(.class)이 파생된다.
*/



//import 써야 될 것이 있으면 이 자리가 아닌 위쪽에 import 있는 곳에 써야됨.

public class Test070
{
	public static void main(String[] args)
	{
		// Rect 클래스 기반의 인스턴스(객체) 생성
		//Rect ob;     //변수 선언 및 초기화
		//ob = new Rect();
	  //  --
	  // 변수명
	  //   ||
		Rect ob = new Rect();    //위에 2줄 합친 것.
		
		//new Rect와 Rect();가 합쳐진 것이 new Rect();

		//입력 메소드 호출
		ob.input();         //void이기 때문에 다른 것 안가져옴

		//넓이 연산 메소드 호출
		int area = ob.calArea();     //int값을 반환하게끔 해주는 것
		
		//둘레 연산 메소드 호출
		int length = ob.calLength();  //int값을 반환하게끔 해주는 것
		
		// 출력 메소드 호출
		ob.print(area, length);            //순서 의미를 갖는다.

	}
}

/*
실행결과
가로 입력 : 30
세로 입력 : 30
가로 입력 : 30
세로 입력 : 30
넓이 입력 : 900
둘레 입력 : 120
계속하려면 아무 키나 누르십시오 . . .
*/
/*=================================
■■■ 연산자(Operator ■■■
- 비트 단위 연산자
=================================*/

public class Test025
{
	public static void main(String[] args)
	{
		int x = 128;    //00000000 0000000 00000000 10000000 -> 128

		System.out.printf("x << 3 : %d\n", x << 3);
		//00000000 0000000 00000100 00000000(왼쪽으로 3칸 이동하고 0은 맨 오른쪽부터 채움) -> 1024
		System.out.printf("x * 8 : %d\n", x * 8);
		//x << 3 : 1024
        //x * 8 : 1024

		System.out.printf("x >> 3 : %d\n", x >> 3);
		//00000000 0000000 00000000 00010000(오른쪽으로 3칸 이동하고 0은 왼쪽부터 채움) -> 16
		System.out.printf("x / 8 : %d\n", x / 8);
		//x >> 3 : 16
        //x / 8 : 16

		System.out.printf("x << 24 : %d\n", x << 24);
		//00000000 0000000 00000000 10000000
		//->10000000 0000000 00000000 00000000(음수의 최대값)
		//->x << 24 : -2147483648

		System.out.printf("x << 25 : %d\n", x << 25);
		System.out.printf("x << 26 : %d\n", x << 26);
		System.out.printf("x << 30 : %d\n", x << 30);
		System.out.printf("x << 31 : %d\n", x << 31);
		//00000000 0000000 00000000 10000000 -> 25까지 가면 ->00000000 0000000 00000000 00000001
		//이렇게 되고 원래 자기 자리로 1이 가기 전까지는 0이 나옴(즉, 31번째까지는 0 나옴)
		//x << 25 : 0
        //x << 26 : 0
        //x << 30 : 0
        //x << 31 : 0
		
		
		System.out.printf("x << 32 : %d\n", x << 32);
		//x << 32 : 128


	}
}

/*실행결과
x << 3 : 1024
x * 8 : 1024
x >> 3 : 16
x / 8 : 16
x << 24 : -2147483648
x << 25 : 0
x << 26 : 0
x << 30 : 0
x << 31 : 0
x << 32 : 128*/
/*=================================
■■■ 클래스와 인스턴스 ■■■
- 생성자(Constructor)
=================================*/

public class Test076
{
	int x;

	// 생성자의 이름은 항상 예외없이 클래스의 이름과 동일해야 하며
	// 필요할 경우 인수를 받아들이는 것도 가능하다.
	// 같은 이름의 메소드를 정의하는 중복정의가 가능하지만
	// 리턴값(반환값)은 가질 수 없다.

	// 생성자는 다른 일반 메소드처럼 호출될 수 없고,
	// new연산자를 이용하여 객체를 생성하기 위해 호출되며,
	// 각 클래스의 인스턴스인 객체를 생성한 후에
	// 생성된 객체의 멤버를 초기화 시키는 작업을 수행하게 된다.


	// 동일안 스코프 안에서 메소드 이름이 겹치면 안됨.
	// 단, 매개변수를 다르게 하면 이름이 같더라도 구분이 가능함.

	// class.의 이름을 쓰게 될 때 this.을 생각하기
	// 이때, this.이 나오면 this.을 품고있는 class를 찾기.

	// ★메소드 오버로딩과 오버라이딩의 차이★ 꼭 알아야됨.
	
	// 생성자(사용자 정의)
	Test076()
	{
		//생성자도 메소드이기 때문에 생성자 내부에서 다른 생성자를 호출하는 것은 가능하다.
		// 다른 일반 메소드처럼 하면 된다.
		//하지만, 생성자 내부에서 가장 먼저 실행되어야 한다는 특징이 있다.
		
		//Test076(200);  //이렇게 class의 문구를 그대로 쓰는 것은 다른 것이 선점해감. 따라서
		this(200);       //이렇게 써야됨.
		// 생성자 내부에서 또다른 생성자를 호출하는 구문

		x = 10;          // 이렇게 써도 되고, this.x=10; 이렇게 써도 됨.(어차피 x는 class의 int x 뿐이기 때문.
		System.out.println("인자 없는 생성자");
		System.out.println("Test076이 갖고 있는 x : " + x);  //this.x 가능

		//Test076(200);  // 이렇게 뒤에 실행할 수 없음.
	}
	
	// 생성자(사용자 정의)
	Test076(int x)
	{
		//x = num;
		
		//x = x;      //둘 다 지역 변수라서 x(둘다 Test076(int x)를 부름)
		

		this.x=x;     //위에 x=x; 와 비교해서 결과 확인하기.
		// 논리적인 해석 -> Test076.x = x;이라고 이해.(단, 이렇게 사용은 못함-> 다른 곳에서 이미 사용을 하고 있기 때문)
		// this.x = 맨위에 int x를 호출
		// x; = Test076(int x)에 x를 호출

		System.out.println("인자가 하나인 생성자");
		System.out.println("Test076이 갖고 있는 x : " + this.x);
	}

	/*Test076(boolean a)
	{
		System.out.println("생성자");
	}*/


	public static void main(String[] args)
	{
		//Test076 클래스 기반 인스턴스 생성
		Test076 ob1 = new Test076();
		//-> 인자 없는 생성자
		//-> Test076이 갖고 있는 x : 10

		Test076 ob2 = new Test076(100);
		//-> 인자가 하나인 생성자
		//-> Test076이 갖고 있는 x : 100

		/*Test076 ob = new Test076(true);
		//-> 생성자*/

		System.out.println();
		System.out.println("main에서 ob1.x : " + ob1.x);
		System.out.println("main에서 ob2.x : " + ob2.x);
	}
}

/*실행결과
인자가 하나인 생성자
Test076이 갖고 있는 x : 200
인자 없는 생성자
Test076이 갖고 있는 x : 10
인자가 하나인 생성자
Test076이 갖고 있는 x : 100

main에서 ob1.x : 10
main에서 ob2.x : 100
계속하려면 아무 키나 누르십시오 . . .
*/
/*=================================
■■■ 배열 ■■■
- 배열의 배열
=================================*/

/*
배열의 배열(다차원 배열)을 활용하여
다음과 같은 데이터를 요소로 취하는 배열을 구성하고
그 결과를 출력하는 프로그램을 구현한다.

실행 예)
1  8  9  16  17   -> i=0
2  7  10 15  18   -> i=1
3  6  11 14  19   -> i=2
4  5  12 13  20   -> i=3
계속하려면 아무 키나 누르세요...

1  8  9  16  17  
2  7  10 15  18  
3  6  11 14  19   
4  5  12 13  20  

       ↓

i:0 i:1 i:2 i:3 i:4

00  31  02  33  04   j:0          원래는 → 이 방향으로 배열을 했었는데
10  21  12  23  14   j:1          지금은 ↓이 방향으로 배열을 함.
20  11  22  13  24   j:2          
30  01  32  03  34   j:3          원래 i,j였다면 지금은 j,i로 봐야됨.

00 10 20 30 | 31 21 11 01 | 02 12 22 32 | 33 23 13 03


n-> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

*/

public class Test089
{
	public static void main(String[] args)
	{
		/*//해결 못함
		int[][] arr = new int[4][5];
		int n;

		for (int i=0; i<arr.length; i++)
		{
			n=i+1;
			for (int j=0; j<arr[i].length; j++)
			{
				if (i%2==0)
				{
					n+=8;
				}
				arr[i][j]=n;
				n++;
			}
		}
		for (int i=0; i<arr.length; i++)
		{
			for (int j=0; j<arr[i].length; j++)
			{
				System.out.printf("%3d", arr[i][j]);
			}
			System.out.println();
		}*/

//---------------------------------------------------------------------------

		//배열의 배열 선언 및 메모리 할당
		int[][] arr = new int [4][5];

		int n=0;
		
		
		for (int i=0; i<5; i++)      //outer 웅~~  i=0 1 2 3 4
		{
			for (int j=0; j<4; j++)  //inner 숑숑숑 j=0 1 2 3
			{
				n++;
				
				if (i%2==0)
					arr[j][i]=n;
				else
					arr[3-j][i]=n;
			}
		}

		//전체 요소 출력
		for (int i=0; i<arr.length; i++)  // i-> 0 1 2 3
		{
			for (int j=0; j<arr[i].length; j++)  //j->0 1 2 3 4
			{
				System.out.printf("%3d", arr[i][j]);
			}
			System.out.println();
		}

	}
}

/*
실행결과
  1  8  9 16 17
  2  7 10 15 18
  3  6 11 14 19
  4  5 12 13 20
계속하려면 아무 키나 누르십시오 . . .
*/